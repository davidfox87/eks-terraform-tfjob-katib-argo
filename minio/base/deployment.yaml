apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio
  labels:
    app: minio
spec:
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 0
  selector:
    matchLabels:
      app: minio
  replicas: 1
  template:
    metadata:
      labels:
        app: minio
    spec:
      serviceAccountName: minio-sa
      containers:

        # - name: init-myapp
        #   image: busybox:latest
        #   command: ['sh', '-c', 'mkdir -p /data/mlflow/ && chown 1000 -R /data/mlflow/ && touch /data/mlflow/hello.txt' ]
        #   volumeMounts:
        #     - name: minio-vol
        #       mountPath: /data

        - name: minio
          image: quay.io/minio/minio:latest
          ports:
            - name: minio
              containerPort: 9000
            - name: minio-console
              containerPort: 9001
          imagePullPolicy: IfNotPresent
          command: 
          - /bin/bash
          - -c
          args: 
          - minio server /data --address :9000 --console-address :9001
          volumeMounts:
          - mountPath: /data
            name: minio-vol # Corresponds to the `spec.volumes` Persistent Volume
          env:
            - name: MINIO_ROOT_USER
              value: "minio"
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: minio-creds
                  key: password
                  optional: false
      # securityContext:
      #   fsGroup: 1000     
      #   runAsUser: 1000
      #   runAsGroup: 1000   
      ## This VolumeClaimTemplate will claim the first available pv with the requested storage class
      volumes:
        - name: minio-vol
          persistentVolumeClaim:
            claimName: minio-pvc
